/*
 * This file is generated by jOOQ.
 */
package ru.uvuv643.ejb.remote.database.tables;


import org.jooq.Record;
import org.jooq.*;
import org.jooq.impl.DSL;
import org.jooq.impl.SQLDataType;
import org.jooq.impl.TableImpl;
import ru.uvuv643.ejb.remote.database.Keys;
import ru.uvuv643.ejb.remote.database.Public;
import ru.uvuv643.ejb.remote.database.tables.records.TeamHeroesRecord;

import java.util.Arrays;
import java.util.List;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class TeamHeroes extends TableImpl<TeamHeroesRecord> {

    private static final long serialVersionUID = 1L;

    /**
     * The reference instance of <code>public.team_heroes</code>
     */
    public static final TeamHeroes TEAM_HEROES = new TeamHeroes();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<TeamHeroesRecord> getRecordType() {
        return TeamHeroesRecord.class;
    }

    /**
     * The column <code>public.team_heroes.team_id</code>.
     */
    public final TableField<TeamHeroesRecord, Integer> TEAM_ID = createField(DSL.name("team_id"), SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>public.team_heroes.hero_id</code>.
     */
    public final TableField<TeamHeroesRecord, Integer> HERO_ID = createField(DSL.name("hero_id"), SQLDataType.INTEGER.nullable(false), this, "");

    private TeamHeroes(Name alias, Table<TeamHeroesRecord> aliased) {
        this(alias, aliased, null);
    }

    private TeamHeroes(Name alias, Table<TeamHeroesRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""), TableOptions.table());
    }

    /**
     * Create an aliased <code>public.team_heroes</code> table reference
     */
    public TeamHeroes(String alias) {
        this(DSL.name(alias), TEAM_HEROES);
    }

    /**
     * Create an aliased <code>public.team_heroes</code> table reference
     */
    public TeamHeroes(Name alias) {
        this(alias, TEAM_HEROES);
    }

    /**
     * Create a <code>public.team_heroes</code> table reference
     */
    public TeamHeroes() {
        this(DSL.name("team_heroes"), null);
    }

    public <O extends Record> TeamHeroes(Table<O> child, ForeignKey<O, TeamHeroesRecord> key) {
        super(child, key, TEAM_HEROES);
    }

    @Override
    public Schema getSchema() {
        return Public.PUBLIC;
    }

    @Override
    public UniqueKey<TeamHeroesRecord> getPrimaryKey() {
        return Keys.TEAM_HEROES_PKEY;
    }

    @Override
    public List<UniqueKey<TeamHeroesRecord>> getKeys() {
        return Arrays.<UniqueKey<TeamHeroesRecord>>asList(Keys.TEAM_HEROES_PKEY);
    }

    @Override
    public TeamHeroes as(String alias) {
        return new TeamHeroes(DSL.name(alias), this);
    }

    @Override
    public TeamHeroes as(Name alias) {
        return new TeamHeroes(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public TeamHeroes rename(String name) {
        return new TeamHeroes(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public TeamHeroes rename(Name name) {
        return new TeamHeroes(name, null);
    }

    // -------------------------------------------------------------------------
    // Row2 type methods
    // -------------------------------------------------------------------------

    @Override
    public Row2<Integer, Integer> fieldsRow() {
        return (Row2) super.fieldsRow();
    }
}
